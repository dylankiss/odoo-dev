#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-b <branch>] [-w <workspace>]
       [-d <devtools-dir>] [--build] [--shell]

Start a Docker container for Odoo development.
The first build might take a while, since the image is built from scratch.
All tools in this repository will be available in the container as well.

To exit the interactive shell session, just run the command "exit".

Options:
  -h, --help                Print this help and exit.
  -v, --verbose             Print script debug info.
  -b <branch>,              Specify which Odoo branch to use for installing
  --branch <branch>         dependencies.
                            [default: master]
  -w <workspace>,           Specify the absolute path to the development
  --workspace <workspace>   workspace to mount in the Docker container's /code
                            directory.
                            [default: ~/code/odoo]
  -d <devtools>,            Specify the absolute path to your odoo-dev
  --devtools <devtools>     development tools directory to mount in the Docker
                            container's /home/odoo/bin directory.
                            [default: this tool's directory]
  --build                   Force a rebuild of the Docker image.
  --shell                   Only start a new shell session to the running
                            container.
EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
}

# shellcheck disable=SC2034
setup_formatting() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT="\033[0m"
    # Bold
    B="\033[1m" B_END="\033[22m"
    # Italic
    I="\033[3m" I_END="\033[23m"
    # Underline
    U="\033[4m" U_END="\033[24m"
    # Colors (_BG = Background, BR_ = Bright)
    BLACK="\033[30m"   BLACK_BG="\033[40m"   BR_BLACK="\033[90m"   BR_BLACK_BG="\033[100m"
    RED="\033[31m"     RED_BG="\033[41m"     BR_RED="\033[91m"     BR_RED_BG="\033[101m"
    GREEN="\033[32m"   GREEN_BG="\033[42m"   BR_GREEN="\033[92m"   BR_GREEN_BG="\033[102m"
    YELLOW="\033[33m"  YELLOW_BG="\033[43m"  BR_YELLOW="\033[93m"  BR_YELLOW_BG="\033[103m"
    BLUE="\033[34m"    BLUE_BG="\033[44m"    BR_BLUE="\033[94m"    BR_BLUE_BG="\033[104m"
    MAGENTA="\033[35m" MAGENTA_BG="\033[45m" BR_MAGENTA="\033[95m" BR_MAGENTA_BG="\033[105m"
    CYAN="\033[36m"    CYAN_BG="\033[46m"    BR_CYAN="\033[96m"    BR_CYAN_BG="\033[106m"
    WHITE="\033[37m"   WHITE_BG="\033[47m"   BR_WHITE="\033[97m"   BR_WHITE_BG="\033[107m"
    DEFAULT="\033[39m" DEFAULT_BG="\033[49m"
  else
    NOFORMAT="" B="" B_END="" I="" I_END="" U="" U_END=""
    BLACK=""   BLACK_BG=""   BR_BLACK=""   BR_BLACK_BG=""
    RED=""     RED_BG=""     BR_RED=""     BR_RED_BG=""
    GREEN=""   GREEN_BG=""   BR_GREEN=""   BR_GREEN_BG=""
    YELLOW=""  YELLOW_BG=""  BR_YELLOW=""  BR_YELLOW_BG=""
    BLUE=""    BLUE_BG=""    BR_BLUE=""    BR_BLUE_BG=""
    MAGENTA="" MAGENTA_BG="" BR_MAGENTA="" BR_MAGENTA_BG=""
    CYAN=""    CYAN_BG=""    BR_CYAN=""    BR_CYAN_BG=""
    WHITE=""   WHITE_BG=""   BR_WHITE=""   BR_WHITE_BG=""
    DEFAULT="" DEFAULT_BG=""
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1}
  msg "$msg"
  exit "$code"
}

parse_params() {
  ODOO_DEP_BRANCH=master
  ODOO_WORKSPACE_DIR=~/code/odoo
  ODOO_DEVTOOLS_DIR="$script_dir"
  shell=false
  build=false

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -b | --branch)
        ODOO_DEP_BRANCH="${2:-$ODOO_DEP_BRANCH}"
        shift
        ;;
    -w | --workspace)
        ODOO_WORKSPACE_DIR="${2:-$ODOO_WORKSPACE_DIR}"
        shift
        ;;
    -d | --devtools)
        ODOO_DEVTOOLS_DIR="${2:-$ODOO_DEVTOOLS_DIR}"
        shift
        ;;
    --build) build=true ;;
    --shell) shell=true ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  return 0
}

parse_params "$@"
setup_formatting


docker="sudo docker"
if [[ "$OSTYPE" == "darwin"* ]]; then
  # No need to sudo when on macOS
  docker="docker"
fi

msg "üü£ ${MAGENTA}${B}Odoo Development Container${NOFORMAT}\n"

export ODOO_DEP_BRANCH
export ODOO_DEVTOOLS_DIR
export ODOO_WORKSPACE_DIR

if ! $shell; then
  if $build; then
    msg "üèóÔ∏è ${WHITE}${B}Force rebuilding the Docker image${NOFORMAT}"
    msg "  ${BR_BLACK}${I}This could take a while ...${NOFORMAT}\n"
    $docker compose -f "$script_dir/docker/compose.yaml" down
    $docker compose -f "$script_dir/docker/compose.yaml" build --no-cache odoo
  fi

  msg "\nüì¶ ${WHITE}${B}Starting the Docker containers${NOFORMAT}\n"
  msg "  ${BR_BLACK}${I}If it's the first time, building could take a while ...${NOFORMAT}\n"
  $docker compose -f "$script_dir/docker/compose.yaml" up -d
fi

msg "\nüíª ${WHITE}${B}Starting an interactive shell to the Docker container${NOFORMAT}\n"
$docker compose -f "$script_dir/docker/compose.yaml" exec odoo zsh
